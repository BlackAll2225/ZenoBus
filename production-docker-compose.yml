version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/azure-sql-edge:latest
    container_name: zentrobus_db
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrongPassword123!
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
      - ./BE/backups:/var/backups
    restart: unless-stopped
    networks:
      - zentrobus_network
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrongPassword123! -Q 'SELECT 1'"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend API
  backend:
    build: 
      context: ./BE
      dockerfile: Dockerfile
    container_name: zentrobus_api
    environment:
      - NODE_ENV=production
    env_file:
      - ./BE/.env.production
    ports:
      - "5000:5000"
    depends_on:
      sqlserver:
        condition: service_healthy
    volumes:
      - ./BE/uploads:/app/uploads
      - ./BE/logs:/app/logs
    restart: unless-stopped
    networks:
      - zentrobus_network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: zentrobus_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./nginx/logs:/var/log/nginx
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - zentrobus_network

  # Certbot for SSL renewal
  certbot:
    image: certbot/certbot
    container_name: zentrobus_certbot
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
    command: certonly --webroot -w /var/www/certbot --email your-email@domain.com -d your-domain.com -d www.your-domain.com --agree-tos --no-eff-email

volumes:
  sqlserver_data:
    driver: local

networks:
  zentrobus_network:
    driver: bridge 