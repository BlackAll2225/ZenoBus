version: '3.8'

services:
  # SQL Server Database
  database:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: zentrobus-db
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=YourStrongPassword123!
      - MSSQL_PID=Express
    ports:
      - "1433:1433"
    volumes:
      - db_data:/var/opt/mssql
      - ./db.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - zentrobus-network
    restart: unless-stopped
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P YourStrongPassword123! -Q "SELECT 1" || exit 1
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Backend API
  backend:
    build:
      context: ./BE
      dockerfile: Dockerfile
    container_name: zentrobus-api
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_SERVER=database
      - DB_PORT=1433
      - DB_DATABASE=ZentroBus
      - DB_USERNAME=sa
      - DB_PASSWORD=YourStrongPassword123!
      - JWT_SECRET=your-super-secret-jwt-key-here-change-this-in-production
      - PAYOS_CLIENT_ID=your-payos-client-id
      - PAYOS_API_KEY=your-payos-api-key
      - PAYOS_CHECKSUM_KEY=your-payos-checksum-key
      - BACKEND_URL=http://localhost:5000
    ports:
      - "5000:5000"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - zentrobus-network
    restart: unless-stopped
    healthcheck:
      test: curl -f http://localhost:5000/api/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Web App
  frontend:
    build:
      context: ./FE
      dockerfile: Dockerfile
    container_name: zentrobus-web
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - zentrobus-network
    restart: unless-stopped
    healthcheck:
      test: curl -f http://localhost/health || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: zentrobus-proxy
    ports:
      - "443:443"
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - zentrobus-network
    restart: unless-stopped
    profiles:
      - with-proxy

volumes:
  db_data:
    driver: local

networks:
  zentrobus-network:
    driver: bridge 